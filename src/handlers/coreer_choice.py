from aiogram import Router
from aiogram import types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from src.keyboards.coreer_keyboards import make_row_keyboard
from src.keyboards.keyboards import kb1


router = Router()

available_jobs = [
    '–î–æ–∫—Ç–æ—Ä',
    '–£—á–∏—Ç–µ–ª—å',
    '–†–∞–±–æ—á–∏–π'
]

available_grades = [
    '–°—Ç–∞–∂–µ—Ä',
    '–°—Ä–µ–¥–Ω–∏–π',
    '–ú–∞—Å—Ç–µ—Ä'
]


class CareerChoice(StatesGroup):
    job = State()
    grade = State()

# –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É –ü—Ä–æ—Ñ–µ—Å—Å–∏—è
@router.message(F.text == '–ü—Ä–æ—Ñ–µ—Å—Å–∏—è')
async def command_prof(message: types.Message, state: FSMContext):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é !', reply_markup=make_row_keyboard(available_jobs, 3))
    await state.set_state(CareerChoice.job)

# –≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è
@router.message(CareerChoice.job, F.text.in_(available_jobs))
async def choice_prof(message: types.Message, state: FSMContext):
    await state.update_data(profession = message.text)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à —É—Ä–æ–≤–µ–Ω—å !', reply_markup=make_row_keyboard(available_grades, 3))
    await state.set_state(CareerChoice.grade)

# –µ—Å–ª–∏ –≤—ã–±–æ—Ä –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
@router.message(CareerChoice.job)
async def choice_prof_incorrect(message: types.Message, state: FSMContext):
    await command_prof(message, state)


# –≤—ã–≤–æ–¥–∏—Ç –æ—Ç–≤–µ—Ç - –≤—ã–±—Ä–∞–Ω–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∏ —É—Ä–æ–≤–µ–Ω—å
@router.message(CareerChoice.grade, F.text.in_(available_grades))
async def choice_grade(message: types.Message, state: FSMContext):
    await state.update_data(grade = message.text)
    user = await  state.get_data()
    await message.answer(text=f'–í–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è {user['profession']}. –í–∞—à —É—Ä–æ–≤–µ–Ω—å {user['grade']} üòÑ.',
                         reply_markup= kb1)
    await state.clear()

# –µ—Å–ª–∏ –≤—ã–±–æ—Ä –Ω–µ –≤ —Å–ø–∏—Å–∫–µ —É—Ä–æ–≤–Ω–µ–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å
@router.message(CareerChoice.grade)
async def choice_grade_incorrect(message: types.Message, state: FSMContext):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à —É—Ä–æ–≤–µ–Ω—å !', reply_markup=make_row_keyboard(available_grades, 3))
    await state.set_state(CareerChoice.grade)
