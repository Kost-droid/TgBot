from aiogram import F, Router
from aiogram.types import Message
from src.resource.request_site_fox import fox
from src.keyboards.keyboards import kb1, kb2
from src.exception_handlers.my_exception import MyException


router = Router()


# –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(F.text == '/start')
async def command_start_handler(message: Message) -> None:
    user_name = message.chat.first_name
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user_name}!", reply_markup= kb1)

# –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É –°—Ç–∞—Ä—Ç
@router.message(F.text == '–°—Ç–∞—Ä—Ç')
async def command_start_handler(message: Message) -> None:
    user_name = message.chat.first_name
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user_name}!", reply_markup= kb1)


# –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–ø
@router.message(F.text == '–°—Ç–æ–ø')
async def command_stop_handler(message: Message) -> None:
    user_name = message.chat.first_name
    await message.answer(f"–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {user_name}!", reply_markup= kb2)


# –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É –ª–∏—Å–∞
@router.message(F.text == '–õ–∏—Å–∞')
async def command_fox_handler(message: Message) -> None:
    try:
        image_fox = fox()
        await message.answer_photo(image_fox)
    except MyException:
        await mistake(message)
    except Exception:
        MyException()
        await mistake(message)


# —ç—Ö–æ –±–æ—Ç
@router.message(F.text)
async def echo_handler(message: Message) -> None:
    await message.answer(message.text)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
async def mistake(message: Message):
    await message.answer(f"–õ–∏—Å–∏—á–µ–∫ –ø–æ–∫–∞ –Ω–µ—Ç! üò∫", reply_markup=kb1)
