from src.keyboards.wather_keyboards import make_inline_keyboard
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from src.utils.weather_ai import list_citys, get_weather
from src.keyboards.keyboards import kb1
from src.exception_handlers.my_exception import MyException


router = Router()


class CareerChoice(StatesGroup):
    choice_city = State()

# –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É –ü–æ–≥–æ–¥–∞
@router.message(F.text == '–ü–æ–≥–æ–¥–∞')
async def command_weather(message: Message, state: FSMContext):
    await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥', reply_markup= ReplyKeyboardRemove())
    await message.answer(text='–ò–∑ —Å–ø–∏—Å–∫–∞', reply_markup= make_inline_keyboard(list_citys))
    await state.set_state(CareerChoice.choice_city)


# –≤–æ–∑—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –ø–æ–≥–æ–¥—É –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ
@router.callback_query(CareerChoice.choice_city)
async def callback_city(callback: CallbackQuery, state: FSMContext):
    city = callback.data
    try:
        await callback.message.answer(get_weather(city), reply_markup=kb1)
    except MyException:
        await mistake(callback, state)
    else:
        await state.clear()


# –µ—Å–ª–∏ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
@router.message(CareerChoice.choice_city)
async def incorrect_city(message: Message, state: FSMContext):
    await command_weather(message, state)


# –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
async def mistake(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.answer(f"–ü–æ–∫–∞ –Ω–µ –º–æ–∂–µ–º —Å–æ–æ–±—â–∏—Ç—å –æ –ø–æ–≥–æ–¥–µ! "
                                  f"–ü—Ä–æ—Å—Ç–æ –æ–¥–µ–≤–∞–π—Ç–µ—Å—å —Ç–µ–ø–ª–µ–µ üòä !",reply_markup=kb1)

