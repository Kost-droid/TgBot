from aiogram import Router
from aiogram import types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from src.utils.yandex_ai import YandexAi, list_famous_people
from src.keyboards.coreer_keyboards import make_row_keyboard
from src.keyboards.keyboards import kb1
from src.exception_handlers.my_exception import MyException

router = Router()

ai_person = YandexAi()

class CareerChoice(StatesGroup):
    person = State()
    talk = State()

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑–≥–æ–≤–æ—Ä
@router.message(F.text == '–†–∞–∑–≥–æ–≤–æ—Ä')
async def command_talk(message: types.Message, state: FSMContext):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω—É', reply_markup= make_row_keyboard(list_famous_people, 3))
    await state.set_state(CareerChoice.person)


# –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞ –≤—ã–±—Ä–∞–Ω–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ–±—â–µ–Ω–∏–µ
@router.message(CareerChoice.person, F.text.in_(list_famous_people))
async def set_person(message: types.Message, state: FSMContext):
    ai_person.set_person(message.text)
    try:
        await message.answer(ai_person.get_ai_answer(), reply_markup= make_row_keyboard(['–°—Ç–æ–ø'], 1))
    except MyException:
        await mistake(message, state)
    else:
        await state.set_state(CareerChoice.talk)


# –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä—Å–æ–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä—Å–æ–Ω—É
@router.message(CareerChoice.person)
async def choice_person_incorrect(message: types.Message, state: FSMContext):
    # await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω—É', reply_markup= make_row_keyboard(list_famous_people))
    await command_talk(message, state)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–æ–ø
@router.message(CareerChoice.talk, F.text == '–°—Ç–æ–ø')
async def send_quest(message: types.Message, state: FSMContext):
    ai_person.reset()
    await message.answer(text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è !", reply_markup= kb1)
    await state.clear()


# –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–µ—Ä—Å–æ–Ω—ã
@router.message(CareerChoice.talk)
async def send_quest(message: types.Message):
    ai_person.add_user_quest(message.text)
    await message.answer(text=ai_person.get_ai_answer(), reply_markup= make_row_keyboard(['–°—Ç–æ–ø'], 1))



# –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
async def mistake(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer(f"–ê–±–æ–Ω–µ–Ω—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω !\n –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–¥–Ω–µ–µ üòå!",reply_markup=kb1)


